@model EventVM
@{
    ViewData["Title"] = "EventDetail";
}

<div class="event-details-area blog-area pt-150 pb-140">
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                <div class="event-details">
                    <div class="event-details-img">
                        <img src="~/assets/img/event/@Model.Event.Image" alt="event-details">
                        <div class="event-date">
                            <h3>@Model.Event.OrganizedDay.ToString("MMMM dd")</h3>
                        </div>
                    </div>
                    <div class="event-details-content">
                        <h2>ADVANCE WED DEVELOPMENT WORKSHOP</h2>
                        <ul>
                            <li><span>time:</span> @Model.Event.StartTime.ToString("HH:mm") - @Model.Event.EndTime.ToString("HH:mm")</li>
                            <li><span>venue</span> @Model.Event.EventDetail.DetailedPlacedArea</li>
                        </ul>
                        <p>@Model.EventDetail.FirstContent</p>
                        <p>@Model.EventDetail.SecondContent</p>
                        <p>@Model.EventDetail.ThirdContent</p>
                        <div class="speakers-area fix">
                            <h4>speaker</h4>
                            @foreach (Speaker speaker in Model.Speakers)
                            {
                                if (speaker.Id == Model.SpeakerEvents.FirstOrDefault().SpeakerId)
                                {
                                    <div class="single-speaker">
                                        <div class="speaker-img">
                                            <img src="~/assets/img/teacher/@speaker.Image" alt="speaker" style="width:100px;height:120px">
                                        </div>
                                        <div class="speaker-name">
                                            <h5>@speaker.Fullname</h5>
                                            <p>@speaker.Position</p>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    @await Component.InvokeAsync("Reply")
                </div>
            </div>
            <div class="col-md-4">
                @await Component.InvokeAsync("Sidebar")
            </div>
        </div>
    </div>
</div>

